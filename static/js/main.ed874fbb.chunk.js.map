{"version":3,"sources":["common/utils/reddit.js","store/subredditSlice.js","store/articleSlice.js","common/utils/positionUtils.js","common/sort/Sort.js","common/vote/UpArrow.js","common/vote/DownArrow.js","common/utils/numberUtils.js","common/vote/Vote.js","common/utils/timeUtils.js","common/article/Article.js","common/scrollTop/ScrollTopButton.js","pages/search/SearchPage.js","pages/article/ArticlePage.js","pages/home/HomePage.js","store/subredditInfoSlice.js","common/utils/colorUtils.js","common/header/Header.js","App.js","store/store.js","serviceWorker.js","index.js"],"names":["reddit","window","listing","on","extras","withFilters","concat","fetch","getJSON","redditUrl","filters","ret","params","without","object","key","prop","hasOwnProperty","filter","f","this","arg","i","length","url","undefined","subreddit","resource","push","keys","qs","param","encodeURIComponent","join","Promise","resolve","reject","res","err","xhr","XMLHttpRequest","open","onload","response","onerror","send","get","JSON","parse","hot","top","controversial","about","random","info","comments","article","recommendedSubreddits","srnames","subredditsByTopic","query","search","q","searchSubreddits","popularSubreddits","newSubreddits","aboutUser","username","getErrorMsg","errorCode","fetchSubreddit","createAsyncThunk","a","name","sortBy","after","time","limit","t","data","reset","subredditSlice","createSlice","initialState","sortTime","status","errorMsg","reducers","updateArticleVote","state","action","payload","id","voteType","stringify","post","find","p","ups","voteCount","likes","updateSortBy","updateSortTime","extraReducers","builder","addCase","pending","fulfilled","children","map","child","error","rejected","actions","selectListing","selectListAfter","selectListSortBy","selectListSortTime","selectListLoadingStatus","selectErrorMsg","title","author","num_comments","created_utc","Date","getTime","selftext_html","post_hint","is_reddit_media_domain","is_self","is_video","fetchArticle","articleId","articleSlice","updateSelectedArticle","updateSelectedArticleVote","selectArticle","selectedArticle","isBrowser","getScrollPosition","element","useWindow","x","y","position","current","document","body","getBoundingClientRect","scrollX","scrollY","left","useScrollPosition","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","useLayoutEffect","handleScroll","setTimeout","addEventListener","removeEventListener","sortTimeOptions","Sort","useSelector","dispatch","useDispatch","handleSortSelection","e","currentTarget","classList","contains","type","getAttribute","includes","timeSelectBox","toggleTimeSelectBox","toggle","className","onClick","ref","UpArrow","viewBox","style","enableBackground","d","fill","stroke","strokeWidth","DownArrow","nFormatter","num","digits","si","value","symbol","toFixed","replace","Vote","voteStatus","useState","updateStatus","count","updateCount","handleVote","preventDefault","newCount","useEffect","defaultProps","calcRelativeTime","previous","rtf","Intl","RelativeTimeFormat","isNaN","format","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","floor","Article","created","videoSrc","thumbnail","thumbnail_width","thumbnail_height","dangerouslySetInnerHTML","__html","content","createElement","innerHTML","childNodes","nodeValue","htmlDecode","autoplay","controls","src","alt","href","target","rel","width","height","ScrollTopButton","isHidden","updateIsHidden","scrollTop","documentElement","SearchPage","useParams","loadStatus","listingRef","setSelectedArticle","fetchOptions","innerHeight","clientHeight","to","ArticlePage","media","reddit_video","fallback_url","HomePage","subredditName","updateSubredditName","redirect","updateRedirect","onSubmit","placeholder","onChange","required","fetchInfo","subredditInfo","subredditInfoSlice","primary_color","banner_background_color","banner_img","banner_height","aboutStatus","key_color","banner_size","selectTitle","selectPrimaryColor","selectBgColor","selectBannerImg","selectBannerHeight","selectInfoStatus","selectTextColorForBg","color","indexOf","h","r","g","b","extractColorFromHex","c","substr","split","extractColorFromRGB","Header","primaryColor","bgColor","bannerImg","bannerHeight","setProperty","headerStyle","background","paddingTop","xmlns","App","exact","path","from","store","configureStore","reducer","subredditReducer","subredditInfoReducer","articleReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed874fbb.chunk.js","sourcesContent":["/**\n * Reddit API wrapper for the browser (https://git.io/Mw39VQ)\n * @author Sahil Muthoo <sahil.muthoo@gmail.com> (https://www.sahilm.com)\n * @license MIT\n */\n\nlet reddit = (window.reddit = {});\n\nreddit.hot = function (subreddit) {\n  return listing({\n    subreddit: subreddit,\n    resource: \"hot\",\n  });\n};\n\nreddit.top = function (subreddit) {\n  return listing(\n    {\n      subreddit: subreddit,\n      resource: \"top\",\n    },\n    [\"t\"]\n  );\n};\n\nreddit.controversial = function (subreddit) {\n  return listing(\n    {\n      subreddit: subreddit,\n      resource: \"controversial\",\n    },\n    [\"t\"]\n  );\n};\n\nreddit[\"new\"] = function (subreddit) {\n  return listing({\n    subreddit: subreddit,\n    resource: \"new\",\n  });\n};\n\nreddit.about = function (subreddit) {\n  return fetch({\n    subreddit: subreddit,\n    resource: \"about\",\n  });\n};\n\nreddit.random = function (subreddit) {\n  return fetch({\n    subreddit: subreddit,\n    resource: \"random\",\n  });\n};\n\nreddit.info = function (subreddit) {\n  let on = {\n    subreddit: subreddit,\n    resource: \"api/info\",\n  };\n  return withFilters(on, [\"id\", \"limit\", \"url\"]);\n};\n\nreddit.comments = function (article, subreddit) {\n  let on = {\n    subreddit: subreddit,\n    resource: \"comments/\" + article,\n  };\n  return withFilters(on, [\"comment\", \"context\", \"depth\", \"limit\", \"sort\"]);\n};\n\nreddit.recommendedSubreddits = function (srnames) {\n  let on = {\n    resource: \"api/recommend/sr/\" + srnames,\n  };\n  return withFilters(on, [\"omit\"]);\n};\n\nreddit.subredditsByTopic = function (query) {\n  let on = {\n    resource: \"api/subreddits_by_topic\",\n    params: {\n      query: query,\n    },\n  };\n  return fetch(on);\n};\n\nreddit.search = function (query, subreddit) {\n  let on = {\n    subreddit: subreddit,\n    resource: \"search\",\n    params: {\n      q: query,\n    },\n  };\n  return withFilters(on, [\n    \"after\",\n    \"before\",\n    \"count\",\n    \"limit\",\n    \"restrict_sr\",\n    \"show\",\n    \"sort\",\n    \"syntax\",\n    \"t\",\n  ]);\n};\n\nreddit.searchSubreddits = function (query) {\n  return listing({\n    resource: \"subreddits/search\",\n    params: {\n      q: query,\n    },\n  });\n};\n\nreddit.popularSubreddits = function () {\n  return listing({\n    resource: \"subreddits/popular\",\n  });\n};\n\nreddit.newSubreddits = function () {\n  return listing({\n    resource: \"subreddits/new\",\n  });\n};\n\nreddit.aboutUser = function (username) {\n  return fetch({\n    resource: \"user/\" + username + \"/about\",\n  });\n};\n\nfunction listing(on, extras) {\n  extras = extras || [];\n  return withFilters(\n    on,\n    [\"after\", \"before\", \"count\", \"limit\", \"show\"].concat(extras)\n  );\n}\n\nfunction fetch(on) {\n  return {\n    fetch: function () {\n      return getJSON(redditUrl(on));\n    },\n  };\n}\n\nfunction withFilters(on, filters) {\n  let ret = {};\n  on.params = on.params || {};\n  filters = filters || [];\n\n  let without = function (object, key) {\n    let ret = {};\n    for (let prop in object) {\n      if (object.hasOwnProperty(prop) && prop !== key) {\n        ret[prop] = object[prop];\n      }\n    }\n    return ret;\n  };\n\n  let filter = function (f) {\n    if (f === \"show\") {\n      return function () {\n        on.params[f] = \"all\";\n        return without(this, f);\n      };\n    } else {\n      return function (arg) {\n        on.params[f] = arg;\n        return without(this, f);\n      };\n    }\n  };\n\n  for (let i = 0; i < filters.length; i++) {\n    ret[filters[i]] = filter(filters[i]);\n  }\n  ret.fetch = function () {\n    return getJSON(redditUrl(on));\n  };\n  return ret;\n}\n\nfunction redditUrl(on) {\n  let url = \"https://www.reddit.com/\";\n  let keys = function (object) {\n    let ret = [];\n    for (let prop in object) {\n      if (object.hasOwnProperty(prop)) {\n        ret.push(prop);\n      }\n    }\n    return ret;\n  };\n\n  if (on.subreddit !== undefined) {\n    url += \"r/\" + on.subreddit + \"/\";\n  }\n  url += on.resource + \".json\";\n  if (keys(on.params).length > 0) {\n    let qs = [];\n    for (let param in on.params) {\n      if (on.params.hasOwnProperty(param)) {\n        qs.push(\n          encodeURIComponent(param) + \"=\" + encodeURIComponent(on.params[param])\n        );\n      }\n    }\n    url += \"?\" + qs.join(\"&\");\n  }\n  return url;\n}\n\nfunction getJSON(url) {\n  return new Promise((resolve, reject) => {\n    get(\n      url,\n      (res) => {\n        resolve(JSON.parse(res));\n      },\n      (err) => reject(err)\n    );\n  });\n}\n\nfunction get(url, res, err) {\n  let xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", url, true);\n  xhr.onload = function () {\n    return res(xhr.response);\n  };\n  xhr.onerror = function () {\n    if (err !== undefined) {\n      return err(xhr.response);\n    }\n  };\n  xhr.send();\n}\n\nexport default reddit;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport reddit from \"../common/utils/reddit\";\n\nconst initialState = {\n  listing: [],\n  after: \"\",\n  sortBy: \"hot\",\n  sortTime: \"day\",\n  status: \"unload\",\n  errorMsg: \"\",\n};\n\nfunction getErrorMsg(errorCode) {\n  switch (errorCode) {\n    case 404:\n      return \"Sorry, there aren’t any communities on Reddit with that name.\";\n    default:\n      return \"Something went wrong...\";\n  }\n}\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const fetchSubreddit = createAsyncThunk(\n  \"subreddit/fetchSubreddit\",\n  async ({ name = \"\", sortBy = \"hot\", after = \"\", time = \"\" }) => {\n    let subreddit = reddit[sortBy](name).limit(25);\n    if (time) {\n      // time could be one of (hour, day, week, month, year, all)\n      subreddit = subreddit.t(time);\n    }\n    if (after) {\n      subreddit = subreddit.after(after);\n    }\n    const response = await subreddit.fetch();\n    if (after === \"\") response.data.reset = true;\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const subredditSlice = createSlice({\n  name: \"subreddit\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    updateArticleVote: (state, action) => {\n      if (\n        action.payload &&\n        action.payload.id &&\n        action.payload.voteType !== undefined\n      ) {\n        let listing = JSON.parse(JSON.stringify(state.listing));\n        let post = listing.find((p) => p.id === action.payload.id);\n        if (post) {\n          post.ups = action.payload.voteCount;\n          post.likes = action.payload.voteType;\n          state.listing = listing;\n        }\n      }\n    },\n    updateSortBy: (state, action) => {\n      if (action.payload) {\n        state.sortBy = action.payload;\n      }\n    },\n    updateSortTime: (state, action) => {\n      if (action.payload) {\n        state.sortTime = action.payload;\n      }\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchSubreddit.pending, (state) => {\n        state.status = \"loading\";\n        state.errorMsg = \"\";\n      })\n      .addCase(fetchSubreddit.fulfilled, (state, action) => {\n        state.status = \"loaded\";\n        if (action.payload.children && action.payload.children.length) {\n          if (action.payload.reset) {\n            state.listing = action.payload.children.map((child) => child.data);\n          } else {\n            state.listing = state.listing.concat(\n              action.payload.children.map((child) => child.data)\n            );\n          }\n          state.after = action.payload.after;\n        } else if (action.payload && action.payload.error) {\n          state.errorMsg = getErrorMsg(action.payload.error);\n        } else {\n          state.errorMsg = getErrorMsg(404);\n        }\n      })\n      .addCase(fetchSubreddit.rejected, (state, action) => {\n        state.status = \"error\";\n        state.errorMsg = getErrorMsg(404);\n      });\n  },\n});\n\nexport const { updateArticleVote, updateSortBy, updateSortTime } =\n  subredditSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.subreddit.value)`\nexport const selectListing = (state) => state.subreddit.listing;\nexport const selectListAfter = (state) => state.subreddit.after;\nexport const selectListSortBy = (state) => state.subreddit.sortBy;\nexport const selectListSortTime = (state) => state.subreddit.sortTime;\nexport const selectListLoadingStatus = (state) => state.subreddit.status;\nexport const selectErrorMsg = (state) => state.subreddit.errorMsg;\n\nexport default subredditSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport reddit from \"../common/utils/reddit\";\n\nconst initialState = {\n  article: {\n    id: \"\",\n    title: \"\",\n    author: \"\",\n    num_comments: 0,\n    created_utc: new Date().getTime() / 1000,\n    selftext_html: \"\",\n    url: \"\",\n    post_hint: \"\",\n    ups: 0,\n    likes: null,\n    is_reddit_media_domain: false,\n    is_self: false,\n    is_video: false,\n  },\n  status: \"loading\",\n  errorMsg: \"\",\n};\n\nfunction getErrorMsg(errorCode) {\n  switch (errorCode) {\n    case 404:\n      return \"No article found.\";\n    default:\n      return \"Something went wrong...\";\n  }\n}\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const fetchArticle = createAsyncThunk(\n  \"article/fetchArticle\",\n  async ({ articleId, subreddit }) => {\n    if (articleId) {\n      const response = await reddit\n        .comments(articleId, subreddit)\n        .limit(1)\n        .fetch();\n      // The value we return becomes the `fulfilled` action payload\n      return response[0] ? response[0].data : response;\n    }\n    return null;\n  }\n);\n\nexport const articleSlice = createSlice({\n  name: \"article\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    updateSelectedArticle: (state, action) => {\n      if (action.payload) {\n        state.article = action.payload;\n      }\n    },\n    updateSelectedArticleVote: (state, action) => {\n      if (\n        action.payload &&\n        action.payload.voteType !== undefined &&\n        action.payload.id === state.article.id\n      ) {\n        state.article.ups = action.payload.voteCount;\n        state.article.likes = action.payload.voteType;\n      }\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchArticle.pending, (state) => {\n        state.status = \"loading\";\n        state.errorMsg = \"\";\n      })\n      .addCase(fetchArticle.fulfilled, (state, action) => {\n        state.status = \"loaded\";\n        if (action.payload && action.payload.children) {\n          let article = action.payload.children[0]\n            ? action.payload.children[0].data\n            : {};\n          state.article = article;\n        } else if (action.payload && action.payload.error) {\n          state.errorMsg = getErrorMsg(action.payload.error);\n        }\n      })\n      .addCase(fetchArticle.rejected, (state, action) => {\n        state.status = \"error\";\n        state.errorMsg = getErrorMsg(404);\n      });\n  },\n});\n\nexport const { updateSelectedArticle, updateSelectedArticleVote } =\n  articleSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.subreddit.value)`\nexport const selectArticle = (state) => state.selectedArticle.article;\nexport const selectErrorMsg = (state) => state.selectedArticle.errorMsg;\n\nexport default articleSlice.reducer;\n","import { useRef, useLayoutEffect } from \"react\";\n\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({ element, useWindow }) {\n  if (!isBrowser) return { x: 0, y: 0 };\n\n  const target = element ? element.current : document.body;\n  const position = target.getBoundingClientRect();\n\n  return useWindow\n    ? { x: window.scrollX, y: window.scrollY }\n    : { x: position.left, y: position.top };\n}\n\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\n  const position = useRef(getScrollPosition({ useWindow }));\n\n  let throttleTimeout = null;\n\n  const callBack = () => {\n    const currPos = getScrollPosition({ element, useWindow });\n    effect({ prevPos: position.current, currPos });\n    position.current = currPos;\n    throttleTimeout = null;\n  };\n\n  useLayoutEffect(() => {\n    const handleScroll = () => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, deps);\n}\n","import React, { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectListSortBy,\n  selectListSortTime,\n  updateSortBy,\n  updateSortTime,\n} from \"../../store/subredditSlice\";\nimport \"./Sort.css\";\n\nconst sortTimeOptions = [\n  [\"hour\", \"Hour\"],\n  [\"day\", \"Today\"],\n  [\"week\", \"This Week\"],\n  [\"month\", \"This Month\"],\n  [\"year\", \"This Year\"],\n  [\"all\", \"All Time\"],\n];\n\nfunction Sort() {\n  const sortBy = useSelector(selectListSortBy);\n  const sortTime = useSelector(selectListSortTime);\n  const dispatch = useDispatch();\n\n  function handleSortSelection(e) {\n    if (e && !e.currentTarget.classList.contains(\"sort-button__selected\")) {\n      let type = e.currentTarget.getAttribute(\"name\") || \"\";\n      if ([\"hot\", \"new\", \"top\"].includes(type)) {\n        dispatch(updateSortBy(type));\n      } else {\n        dispatch(updateSortTime(type));\n      }\n      if (!timeSelectBox.current.classList.contains(\"hidden\")) {\n        toggleTimeSelectBox();\n      }\n    }\n  }\n\n  const timeSelectBox = useRef(null);\n\n  function toggleTimeSelectBox() {\n    timeSelectBox.current.classList.toggle(\"hidden\");\n  }\n\n  return (\n    <div className=\"sort-box\">\n      <button\n        className={\n          \"sort-button \" + (sortBy === \"hot\" ? \"sort-button__selected\" : \"\")\n        }\n        name=\"hot\"\n        type=\"button\"\n        onClick={handleSortSelection}\n      >\n        <i className=\"material-icons start-icon\">local_fire_department</i>\n        <span>Hot</span>\n      </button>\n      <button\n        className={\n          \"sort-button \" + (sortBy === \"new\" ? \"sort-button__selected\" : \"\")\n        }\n        name=\"new\"\n        type=\"button\"\n        onClick={handleSortSelection}\n      >\n        <i className=\"material-icons start-icon\">brightness_5</i>\n        <span>New</span>\n      </button>\n      <button\n        className={\n          \"sort-button \" + (sortBy === \"top\" ? \"sort-button__selected\" : \"\")\n        }\n        name=\"top\"\n        type=\"button\"\n        onClick={handleSortSelection}\n      >\n        <i className=\"material-icons start-icon\">leaderboard</i>\n        <span>Top</span>\n      </button>\n      <div className=\"sort-time-wrapper\">\n        <button\n          className={\n            \"sort-button \" +\n            (sortBy === \"top\" ? \"sort-button__selected\" : \"hidden\")\n          }\n          name=\"time\"\n          type=\"button\"\n          onClick={toggleTimeSelectBox}\n        >\n          <span>\n            {(sortTimeOptions.find((time) => time[0] === sortTime) || [])[1]}\n          </span>\n          <i className=\"material-icons\">expand_more</i>\n        </button>\n        <ul className=\"sort-time-options hidden\" ref={timeSelectBox}>\n          {sortTimeOptions.map((time) => (\n            <li\n              className={\n                \"sort-time-option \" +\n                (sortTime === time[0] ? \"sort-time-option__selected\" : \"\")\n              }\n              key={time[0]}\n              name={time[0]}\n              onClick={handleSortSelection}\n            >\n              {time[1]}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Sort;\n","export default function UpArrow({className}) {\r\n\treturn (\r\n\t\t<svg x=\"0px\" y=\"0px\" viewBox=\"0 -20 512.171 552.171\" style={{enableBackground: 'new 0 0 512.171 552.171'}} className={className}>\r\n\t\t\t<g>\r\n\t\t\t\t<g>\r\n\t\t\t\t\t<path d=\"M476.723,216.64L263.305,3.115C261.299,1.109,258.59,0,255.753,0c-2.837,0-5.547,1.131-7.552,3.136L35.422,216.64\r\n\t\t\t\t\t\tc-3.051,3.051-3.947,7.637-2.304,11.627c1.664,3.989,5.547,6.571,9.856,6.571h117.333v266.667c0,5.888,4.779,10.667,10.667,10.667\r\n\t\t\t\t\t\th170.667c5.888,0,10.667-4.779,10.667-10.667V234.837h116.885c4.309,0,8.192-2.603,9.856-6.592\r\n\t\t\t\t\t\tC480.713,224.256,479.774,219.691,476.723,216.64z\" fill=\"transparent\" stroke=\"#878a8c\" strokeWidth=\"40\" />\r\n\t\t\t\t</g>\r\n\t\t\t</g>\r\n\t\t\t<g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g>\r\n\t\t</svg>\r\n\t)\r\n}","export default function DownArrow({className}) {\r\n\treturn (\r\n\t\t<svg x=\"0px\" y=\"0px\" viewBox=\"0 -20 512.171 552.171\" style={{enableBackground: 'new 0 0 512.171 552.171'}}  className={className}>\r\n\t\t\t<g>\r\n\t\t\t\t<g>\r\n\t\t\t\t\t<path d=\"M479.046,283.925c-1.664-3.989-5.547-6.592-9.856-6.592H352.305V10.667C352.305,4.779,347.526,0,341.638,0H170.971\r\n\t\t\t\t\t\tc-5.888,0-10.667,4.779-10.667,10.667v266.667H42.971c-4.309,0-8.192,2.603-9.856,6.571c-1.643,3.989-0.747,8.576,2.304,11.627\r\n\t\t\t\t\t\tl212.8,213.504c2.005,2.005,4.715,3.136,7.552,3.136s5.547-1.131,7.552-3.115l213.419-213.504\r\n\t\t\t\t\t\tC479.793,292.501,480.71,287.915,479.046,283.925z\" fill=\"transparent\" stroke=\"#878a8c\" strokeWidth=\"40\" />\r\n\t\t\t\t</g>\r\n\t\t\t</g>\r\n\t\t\t<g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g>\r\n\t\t</svg>\r\n\t)\r\n}\r\n\r\n","export function nFormatter(num, digits) {\n  var si = [\n    { value: 1, symbol: \"\" },\n    { value: 1e3, symbol: \"k\" },\n    { value: 1e6, symbol: \"M\" },\n    { value: 1e9, symbol: \"G\" },\n    { value: 1e12, symbol: \"T\" },\n    { value: 1e15, symbol: \"P\" },\n    { value: 1e18, symbol: \"E\" },\n  ];\n  var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  var i;\n  for (i = si.length - 1; i > 0; i--) {\n    if (num >= si[i].value) {\n      break;\n    }\n  }\n  return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport UpArrow from \"./UpArrow\";\nimport DownArrow from \"./DownArrow\";\nimport { updateArticleVote } from \"../../store/subredditSlice\";\nimport { updateSelectedArticleVote } from \"../../store/articleSlice\";\nimport { nFormatter } from \"../utils/numberUtils\";\nimport \"./Vote.css\";\n\nfunction Vote({ voteCount, voteStatus, articleId }) {\n  const [status, updateStatus] = useState(voteStatus);\n  const [count, updateCount] = useState(voteCount);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    updateCount(voteCount);\n  }, [voteCount]);\n\n  function handleVote(e) {\n    e.preventDefault();\n    let newCount = count;\n    if (e.currentTarget.name === \"upvote\") {\n      switch (status) {\n        case -1:\n          newCount += 2;\n          updateStatus(1);\n          updateCount(newCount);\n          dispatch(\n            updateArticleVote({\n              id: articleId,\n              voteType: true,\n              voteCount: newCount,\n            })\n          );\n          dispatch(\n            updateSelectedArticleVote({\n              id: articleId,\n              voteType: true,\n              voteCount: newCount,\n            })\n          );\n          break;\n        case 0:\n          newCount += 1;\n          updateStatus(1);\n          updateCount(newCount);\n          dispatch(\n            updateArticleVote({\n              id: articleId,\n              voteType: true,\n              voteCount: newCount,\n            })\n          );\n          dispatch(\n            updateSelectedArticleVote({\n              id: articleId,\n              voteType: true,\n              voteCount: newCount,\n            })\n          );\n          break;\n        case 1:\n          newCount -= 1;\n          updateStatus(0);\n          updateCount(newCount);\n          dispatch(\n            updateArticleVote({\n              id: articleId,\n              voteType: null,\n              voteCount: newCount,\n            })\n          );\n          dispatch(\n            updateSelectedArticleVote({\n              id: articleId,\n              voteType: null,\n              voteCount: newCount,\n            })\n          );\n          break;\n        default:\n      }\n    } else if (e.currentTarget.name === \"downvote\") {\n      switch (status) {\n        case -1:\n          newCount += 1;\n          updateStatus(0);\n          updateCount(newCount);\n          dispatch(\n            updateArticleVote({\n              id: articleId,\n              voteType: null,\n              voteCount: newCount,\n            })\n          );\n          dispatch(\n            updateSelectedArticleVote({\n              id: articleId,\n              voteType: null,\n              voteCount: newCount,\n            })\n          );\n          break;\n        case 0:\n          newCount -= 1;\n          updateStatus(-1);\n          updateCount(newCount);\n          dispatch(\n            updateArticleVote({\n              id: articleId,\n              voteType: false,\n              voteCount: newCount,\n            })\n          );\n          dispatch(\n            updateSelectedArticleVote({\n              id: articleId,\n              voteType: false,\n              voteCount: newCount,\n            })\n          );\n          break;\n        case 1:\n          newCount -= 2;\n          updateStatus(-1);\n          updateCount(newCount);\n          dispatch(\n            updateArticleVote({\n              id: articleId,\n              voteType: false,\n              voteCount: newCount,\n            })\n          );\n          dispatch(\n            updateSelectedArticleVote({\n              id: articleId,\n              voteType: false,\n              voteCount: newCount,\n            })\n          );\n          break;\n        default:\n      }\n    }\n  }\n\n  return (\n    <div\n      className={\n        \"vote \" +\n        (status === -1\n          ? \"vote__downvoted\"\n          : status === 1\n          ? \"vote__upvoted\"\n          : \"\")\n      }\n    >\n      <button className=\"vote-btn\" name=\"upvote\" onClick={handleVote}>\n        <UpArrow className=\"upvote__img\" />\n      </button>\n      <div className=\"vote-count\">{nFormatter(count, 1)}</div>\n      <button className=\"vote-btn\" name=\"downvote\" onClick={handleVote}>\n        <DownArrow className=\"downvote__img\" />\n      </button>\n    </div>\n  );\n}\n\nVote.defaultProps = {\n  voteCount: 0,\n  voteStatus: 0,\n  articleId: \"\",\n};\n\nVote.propTypes = {\n  voteCount: PropTypes.number,\n  voteStatus: PropTypes.oneOf([-1, 0, 1]),\n  articleId: PropTypes.string,\n};\n\nexport default Vote;\n","export default function calcRelativeTime(current, previous) {\n  const rtf = new Intl.RelativeTimeFormat(\"en\", { style: \"long\" });\n  if (isNaN(current) || isNaN(previous)) return rtf.format(0, \"second\");\n\n  let msPerMinute = 60 * 1000;\n  let msPerHour = msPerMinute * 60;\n  let msPerDay = msPerHour * 24;\n  let msPerMonth = msPerDay * 30;\n  let msPerYear = msPerDay * 365;\n\n  let elapsed = current - previous;\n\n  if (elapsed < msPerMinute) {\n    return rtf.format(-Math.floor(elapsed / 1000), \"second\");\n  } else if (elapsed < msPerHour) {\n    return rtf.format(-Math.floor(elapsed / msPerMinute), \"minute\");\n  } else if (elapsed < msPerDay) {\n    return rtf.format(-Math.floor(elapsed / msPerHour), \"hour\");\n  } else if (elapsed < msPerMonth) {\n    return rtf.format(-Math.floor(elapsed / msPerDay), \"day\");\n  } else if (elapsed < msPerYear) {\n    return rtf.format(-Math.floor(elapsed / msPerMonth), \"month\");\n  } else {\n    return rtf.format(-Math.floor(elapsed / msPerYear), \"year\");\n  }\n}\n","import React from \"react\";\nimport Vote from \"../vote/Vote\";\nimport calcRelativeTime from \"../utils/timeUtils\";\nimport PropTypes from \"prop-types\";\nimport \"./Article.css\";\n\nfunction Article({\n  articleId,\n  title,\n  author,\n  num_comments,\n  created,\n  selftext_html,\n  url,\n  ups,\n  likes,\n  is_reddit_media_domain,\n  is_video,\n  videoSrc,\n  thumbnail,\n  thumbnail_width,\n  thumbnail_height,\n}) {\n  function htmlDecode(content) {\n    let e = document.createElement(\"div\");\n    e.innerHTML = content;\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n  }\n\n  return (\n    <article className=\"article\">\n      <Vote\n        voteCount={ups}\n        voteStatus={likes === true ? 1 : likes === false ? -1 : 0}\n        articleId={articleId}\n      />\n      <div className=\"article-details\">\n        <div className=\"posted-info\">\n          Posted by u/\n          <span className=\"posted-by\">{author}</span>\n          <span className=\"posted-time\">\n            {\" \"}\n            {calcRelativeTime(new Date(), new Date(created * 1000))}\n          </span>\n        </div>\n        <h1 className=\"article-title\">{title}</h1>\n        {selftext_html ? (\n          <div\n            className=\"article-content\"\n            dangerouslySetInnerHTML={{ __html: htmlDecode(selftext_html) }}\n          ></div>\n        ) : is_video ? (\n          <div className=\"article-video-content\">\n            <video className=\"article-video\" autoplay controls>\n              <source src={videoSrc} type=\"video/mp4\" />\n              Your browser does not support HTML video.\n            </video>\n          </div>\n        ) : is_reddit_media_domain ? (\n          <div className=\"article-img-content\">\n            <img src={url} alt={title} className=\"article-img\" />\n          </div>\n        ) : (\n          <div className=\"article-link-content\">\n            {url && (\n              <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                {url}\n              </a>\n            )}\n\n            {thumbnail && (\n              <img\n                src={thumbnail}\n                alt=\"\"\n                className=\"thumbnail-img\"\n                style={{ width: thumbnail_width, height: thumbnail_height }}\n              />\n            )}\n          </div>\n        )}\n        <div className=\"actions-panel\">\n          <div className=\"comments-summary\">\n            <i className=\"material-icons action-icon\">chat_bubble_outline</i>\n            {num_comments} Comment{num_comments > 1 ? \"s\" : \"\"}\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nArticle.propTypes = {\n  articleId: PropTypes.string,\n  title: PropTypes.string,\n  author: PropTypes.string,\n  num_comments: PropTypes.number,\n  created: PropTypes.number,\n  selftext_html: PropTypes.string,\n  ups: PropTypes.number,\n  likes: PropTypes.bool,\n  is_reddit_media_domain: PropTypes.bool,\n  is_self: PropTypes.bool,\n  is_video: PropTypes.bool,\n  videoSrc: PropTypes.string,\n  thumbnail: PropTypes.string,\n  thumbnail_width: PropTypes.number,\n  thumbnail_height: PropTypes.number,\n};\n\nexport default Article;\n","import React, { useState } from \"react\";\nimport { useScrollPosition } from \"../utils/positionUtils\";\nimport \"./ScrollTopButton.css\";\n\nexport default function ScrollTopButton() {\n  const [isHidden, updateIsHidden] = useState(true);\n  useScrollPosition(({ prevPos, currPos }) => {\n    if (currPos.y < prevPos.y && currPos.y < -100) {\n      updateIsHidden(false);\n    } else {\n      updateIsHidden(true);\n    }\n  }, []);\n\n  function scrollToTop() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n  return (\n    <button\n      className={\"scroll-top-btn\" + (isHidden ? \" hidden\" : \"\")}\n      onClick={scrollToTop}\n    >\n      <i className=\"material-icons\">expand_less</i>\n    </button>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  fetchSubreddit,\n  selectListing,\n  selectListAfter,\n  selectListSortBy,\n  selectListSortTime,\n  selectListLoadingStatus,\n  selectErrorMsg,\n} from \"../../store/subredditSlice\";\nimport { updateSelectedArticle } from \"../../store/articleSlice\";\nimport { useScrollPosition } from \"../../common/utils/positionUtils\";\nimport Sort from \"../../common/sort/Sort\";\nimport Article from \"../../common/article/Article\";\nimport ScrollTopButton from \"../../common/scrollTop/ScrollTopButton\";\nimport \"./SearchPage.css\";\n\nfunction SearchPage() {\n  const { subreddit } = useParams();\n  const listing = useSelector(selectListing);\n  const after = useSelector(selectListAfter);\n  const sortBy = useSelector(selectListSortBy);\n  const sortTime = useSelector(selectListSortTime);\n  const loadStatus = useSelector(selectListLoadingStatus);\n  const errorMsg = useSelector(selectErrorMsg);\n  const dispatch = useDispatch();\n\n  const listingRef = useRef(null);\n\n  useEffect(() => {\n    let fetchOptions = { name: subreddit, sortBy, after: \"\" };\n    if (sortBy === \"top\") fetchOptions.time = sortTime;\n    dispatch(fetchSubreddit(fetchOptions));\n  }, [sortBy, sortTime]);\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (\n        currPos.y < prevPos.y &&\n        currPos.y * -1 + window.innerHeight * 2 >\n          listingRef.current.clientHeight\n      ) {\n        if (loadStatus !== \"loading\" && after !== null) {\n          let fetchOptions = { name: subreddit, sortBy, after };\n          if (sortBy === \"top\") fetchOptions.time = sortTime;\n          dispatch(fetchSubreddit(fetchOptions));\n        }\n      }\n    },\n    [loadStatus, after, sortBy, sortTime]\n  );\n\n  function setSelectedArticle(e) {\n    let id = e.currentTarget.id;\n    let article = listing.find((article) => article.id === id);\n    dispatch(updateSelectedArticle({ ...article }));\n  }\n\n  if (listing.length) {\n    return (\n      <section className=\"search-page\" ref={listingRef}>\n        <Sort />\n        <div className=\"articles-list\">\n          {listing.map((article) => (\n            <Link\n              to={`/r/${subreddit}/comments/${article.id}`}\n              key={article.id}\n              id={article.id}\n              className=\"article-link\"\n              onClick={setSelectedArticle}\n            >\n              <Article\n                articleId={article.id}\n                title={article.title}\n                author={article.author}\n                num_comments={article.num_comments}\n                created={article.created_utc}\n                ups={article.ups}\n                likes={article.likes}\n              />\n            </Link>\n          ))}\n        </div>\n        <ScrollTopButton />\n      </section>\n    );\n  } else {\n    return (\n      <section className=\"search-page search-page__error\" ref={listingRef}>\n        <p className=\"error-msg\">{errorMsg}</p>\n      </section>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Article from \"../../common/article/Article\";\nimport {\n  fetchArticle,\n  selectArticle,\n  selectErrorMsg,\n} from \"../../store/articleSlice\";\nimport ScrollTopButton from \"../../common/scrollTop/ScrollTopButton\";\nimport \"./ArticlePage.css\";\n\nfunction ArticlePage() {\n  const { subreddit, articleId } = useParams();\n  const article = useSelector(selectArticle);\n  const errorMsg = useSelector(selectErrorMsg);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!article.id) {\n      dispatch(fetchArticle({ articleId, subreddit }));\n    }\n  }, [articleId]);\n\n  return (\n    <section\n      className={\"article-page\" + (article.id ? \"\" : \" article-page__error\")}\n    >\n      {article.id ? (\n        <Article\n          {...article}\n          articleId={article.id}\n          videoSrc={\n            article.media && article.media.reddit_video\n              ? article.media.reddit_video.fallback_url\n              : \"\"\n          }\n        />\n      ) : (\n        <p className=\"error-msg\">{errorMsg}</p>\n      )}\n      <ScrollTopButton />\n    </section>\n  );\n}\n\nexport default ArticlePage;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./HomePage.css\";\n\nfunction HomePage() {\n  const [subredditName, updateSubredditName] = useState(\"\");\n  const [redirect, updateRedirect] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    updateRedirect(true);\n  }\n  if (redirect) return <Redirect to={`/r/${subredditName}`} />;\n  return (\n    <section className=\"home-page\">\n      <div className=\"home-page--content\">\n        <h1>Welcome to Subreddit App</h1>\n        <p className=\"home-page--msg\">Please select a subreddit</p>\n        <form onSubmit={handleSubmit} className=\"home-page--form\">\n          <input\n            type=\"text\"\n            placeholder=\"e.g. dota2\"\n            name=\"subreddit-name\"\n            value={subredditName}\n            onChange={(e) => updateSubredditName(e.target.value)}\n            className=\"search-input\"\n            required\n          />\n          <button type=\"submit\" className=\"search-button\">\n            <i className=\"material-icons\">search</i>\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default HomePage;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport reddit from \"../common/utils/reddit\";\n\nconst initialState = {\n  title: \"\",\n  primary_color: \"\",\n  banner_background_color: \"\",\n  banner_img: \"\",\n  banner_height: 0,\n  status: \"unload\",\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const fetchInfo = createAsyncThunk(\n  \"subredditInfo/fetchInfo\",\n  async ({ name = \"\" }) => {\n    let subredditInfo = reddit.about(name);\n\n    const response = await subredditInfo.fetch();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const subredditInfoSlice = createSlice({\n  name: \"subredditInfo\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {},\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchInfo.pending, (state) => {\n        state.aboutStatus = \"loading\";\n      })\n      .addCase(fetchInfo.fulfilled, (state, action) => {\n        state.aboutStatus = \"loaded\";\n        if (action.payload) {\n          state.title = action.payload.title;\n          state.primary_color =\n            action.payload.primary_color || action.payload.key_color;\n          state.banner_background_color =\n            action.payload.banner_background_color;\n          state.banner_img = action.payload.banner_img;\n          state.banner_height = action.payload.banner_size\n            ? action.payload.banner_size[1]\n            : 0;\n        }\n      });\n  },\n});\n\nexport const { updateArticleVote, updateSortBy, updateSortTime } =\n  subredditInfoSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.subreddit.value)`\nexport const selectTitle = (state) => state.subredditInfo.title;\nexport const selectPrimaryColor = (state) => state.subredditInfo.primary_color;\nexport const selectBgColor = (state) =>\n  state.subredditInfo.banner_background_color;\nexport const selectBannerImg = (state) => state.subredditInfo.banner_img;\nexport const selectBannerHeight = (state) => state.subredditInfo.banner_height;\nexport const selectInfoStatus = (state) => state.subredditInfo.status;\n\nexport default subredditInfoSlice.reducer;\n","export function extractColorFromHex(h) {\n  let r = 0,\n    g = 0,\n    b = 0;\n\n  // 3 digits\n  if (h.length === 4) {\n    r = \"0x\" + h[1] + h[1];\n    g = \"0x\" + h[2] + h[2];\n    b = \"0x\" + h[3] + h[3];\n\n    // 6 digits\n  } else if (h.length === 7) {\n    r = \"0x\" + h[1] + h[2];\n    g = \"0x\" + h[3] + h[4];\n    b = \"0x\" + h[5] + h[6];\n  }\n\n  return { r, g, b };\n}\n\nexport function extractColorFromRGB(c) {\n  c = c.substr(c.indexOf(\"(\") + 1);\n  c = c.substr(0, c.length - 1);\n\n  const [r, g, b] = c.split(\",\");\n\n  return { r, g, b };\n}\n\n// support Hex or RGB color only\nexport function selectTextColorForBg(color) {\n  const { r, g, b } =\n    color.indexOf(\"#\") > -1\n      ? extractColorFromHex(color)\n      : extractColorFromRGB(color);\n  if (r * 0.299 + g * 0.587 + b * 0.114 > 186) {\n    return \"#1a1a1b\";\n  } else {\n    return \"#ffffff\";\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectTitle,\n  selectPrimaryColor,\n  selectBgColor,\n  selectBannerImg,\n  selectBannerHeight,\n  selectInfoStatus,\n  fetchInfo,\n} from \"../../store/subredditInfoSlice\";\nimport { selectTextColorForBg } from \"../utils/colorUtils\";\nimport \"./Header.css\";\n\nfunction Header() {\n  const { subreddit, articleId } = useParams();\n\n  const status = useSelector(selectInfoStatus);\n  const title = useSelector(selectTitle);\n  const primaryColor = useSelector(selectPrimaryColor);\n  const bgColor = useSelector(selectBgColor);\n  const bannerImg = useSelector(selectBannerImg);\n  const bannerHeight = useSelector(selectBannerHeight);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (status === \"unload\") {\n      dispatch(fetchInfo({ name: subreddit }));\n    }\n  }, []);\n\n  document.documentElement.style.setProperty(\"--primary-color\", primaryColor);\n  document.documentElement.style.setProperty(\"--banner-bg-color\", bgColor);\n\n  let headerStyle = {\n    background: bannerImg ? `url(${bannerImg}) no-repeat center / cover` : \"\",\n  };\n  if (bannerHeight) {\n    if (!articleId) {\n      headerStyle.paddingTop = bannerHeight / 2;\n    } else {\n      headerStyle.height = bannerHeight / 2;\n    }\n  }\n\n  return (\n    <header\n      className={!articleId ? \"subreddit-header\" : \"subreddit-link\"}\n      style={headerStyle}\n    >\n      <Link to=\"/\">\n        <i className=\"material-icons home-icon\">home</i>\n      </Link>\n\n      {!articleId ? (\n        <div className=\"subrredit-info\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            className=\"subreddit-icon\"\n          >\n            <path d=\"M16.5,2.924,11.264,15.551H9.91L15.461,2.139h.074a9.721,9.721,0,1,0,.967.785ZM8.475,8.435a1.635,1.635,0,0,0-.233.868v4.2H6.629V6.2H8.174v.93h.041a2.927,2.927,0,0,1,1.008-.745,3.384,3.384,0,0,1,1.453-.294,3.244,3.244,0,0,1,.7.068,1.931,1.931,0,0,1,.458.151l-.656,1.558a2.174,2.174,0,0,0-1.067-.246,2.159,2.159,0,0,0-.981.215A1.59,1.59,0,0,0,8.475,8.435Z\"></path>\n          </svg>\n          <span className=\"subreddit-title\">{title}</span>\n          <span className=\"subreddit-path\">r/{subreddit}</span>\n        </div>\n      ) : (\n        <Link\n          to={`/r/${subreddit}/`}\n          style={{ color: bgColor ? selectTextColorForBg(bgColor) : \"#1c1c1c\" }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            className=\"subreddit-link-icon\"\n          >\n            <path d=\"M15.8286,15.8998 C15.3466,16.3788 12.6326,15.5598 8.5516,11.4798 C4.4706,7.3968 3.6486,4.6858 4.1316,4.2038 C4.3566,3.9788 4.9286,3.9208 5.9126,4.3518 C5.6166,4.5678 5.3306,4.8008 5.0666,5.0658 C5.0536,5.0798 5.0416,5.0948 5.0266,5.1098 C5.5756,6.4268 6.8946,8.4088 9.2596,10.7728 C11.6206,13.1338 13.6046,14.4538 14.9246,15.0028 C14.9376,14.9898 14.9526,14.9778 14.9666,14.9638 C15.2316,14.6988 15.4646,14.4128 15.6786,14.1178 C16.1096,15.1028 16.0526,15.6748 15.8286,15.8998 M16.7526,11.8998 C17.4066,9.5458 16.8136,6.9138 14.9666,5.0658 C13.6436,3.7438 11.8866,3.0148 10.0166,3.0148 C9.3686,3.0148 8.7356,3.1078 8.1286,3.2768 C5.7306,1.7598 3.9176,1.5898 2.7176,2.7898 C1.4036,4.1028 2.0736,6.1918 3.2866,8.1688 C2.6446,10.5128 3.2276,13.1258 5.0666,14.9638 C6.3886,16.2868 8.1456,17.0148 10.0166,17.0148 C10.6536,17.0148 11.2746,16.9178 11.8736,16.7518 C13.0856,17.4938 14.3406,18.0318 15.4316,18.0318 C16.1156,18.0318 16.7366,17.8198 17.2426,17.3138 C18.4416,16.1138 18.2706,14.2988 16.7526,11.8998\"></path>\n          </svg>\n          <span className=\"subreddit-name\">{subreddit}</span>\n        </Link>\n      )}\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport SearchPage from \"./pages/search/SearchPage\";\nimport ArticlePage from \"./pages/article/ArticlePage\";\nimport HomePage from \"./pages/home/HomePage\";\nimport Header from \"./common/header/Header\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/subreddit\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/r/:subreddit/comments/:articleId\">\n            <Header />\n            <ArticlePage />\n          </Route>\n          <Route path=\"/r/:subreddit\">\n            <Header />\n            <SearchPage />\n          </Route>\n          <Redirect from=\"/:subreddit\" to=\"/r/:subreddit\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport subredditReducer from \"./subredditSlice\";\nimport subredditInfoReducer from \"./subredditInfoSlice\";\nimport articleReducer from \"./articleSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    subreddit: subredditReducer,\n    subredditInfo: subredditInfoReducer,\n    selectedArticle: articleReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}